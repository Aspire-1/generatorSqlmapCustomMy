<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
	<context id="testTables" targetRuntime="MyBatis3">
		
		<!-- 生成的java文件编码 -->
		<property name="javaFileEncoding" value="UTF-8"/>

		<commentGenerator>
			<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
			<property name="suppressAllComments" value="true" />
		</commentGenerator>
		
		
		<!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
		<jdbcConnection driverClass="oracle.jdbc.driver.OracleDriver"
			connectionURL="jdbc:oracle:thin:@localhost:1521:XE" userId="aspire"
			password="aspire">
		</jdbcConnection>

		
		<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 
			和 NUMERIC 类型解析为java.math.BigDecimal -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="true" />
		</javaTypeResolver>

		<!-- targetPackage:生成PO类的位置 -->
		<javaModelGenerator targetPackage="com.aspire.OnlineMeal.model"
			targetProject="D:\newWorkspace\OnlineMeal\src\main\java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
			<!-- 从数据库返回的值被清理前后的空格 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>
		
		<!-- targetPackage:mapper映射文件生成的位置 -->
		<sqlMapGenerator targetPackage="com.aspire.OnlineMeal.mapper.xml"
			targetProject="D:\newWorkspace\OnlineMeal\src\main\java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>
		
		<!-- targetPackage：mapper接口生成的位置 -->
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="com.aspire.OnlineMeal.mapper" 
			targetProject="D:\newWorkspace\OnlineMeal\src\main\java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>
		
		<!-- 指定数据库表 -->
		<table enableCountByExample="false" enableUpdateByExample="false"
			enableDeleteByExample="false" enableSelectByExample="false"
			 schema="" tableName="USER_INFO" domainObjectName="UserInfo">
			<!-- 如果设置为true，生成的model类会直接使用column本身的名字，而不会再使用驼峰命名方法
			比如BORN_DATE，生成的属性名字就是BORN_DATE,而不会是bornDate -->
			<property name="useActualColumnNames" value="false" />
				<generatedKey column="USER_ID " sqlStatement="Oracle"/>
			
			<columnRenamingRule searchString="^USER_" replaceString=""/>
			
			<columnOverride column="USER_REGIST_CODE_TIME" javaType="java.lang.String">
			</columnOverride>
			
			<columnOverride column="USER_REGIST_TIME" javaType="java.lang.String">
			</columnOverride>
			
			<columnOverride column="USER_LAST_LOGIN_TIME" javaType="java.lang.String">
			</columnOverride>
			
		</table>
		
		<table enableCountByExample="false" enableUpdateByExample="false"
			enableDeleteByExample="false" enableSelectByExample="false"
			 schema="" tableName="USER_ADDRESS_INFO" domainObjectName="AddressInfo">
			<!-- 如果设置为true，生成的model类会直接使用column本身的名字，而不会再使用驼峰命名方法
			比如BORN_DATE，生成的属性名字就是BORN_DATE,而不会是bornDate -->
			<property name="useActualColumnNames" value="false" />
				<generatedKey column="USER_ADDRESS_ID" sqlStatement="Oracle"/>
		
			<columnRenamingRule searchString="^USER_ADDRESS" replaceString=""/>
			
			<columnOverride column="USER_ADDRESS">
				<property name="property" value="address"/>
			</columnOverride>
		
		</table>
		

	</context>
</generatorConfiguration>
